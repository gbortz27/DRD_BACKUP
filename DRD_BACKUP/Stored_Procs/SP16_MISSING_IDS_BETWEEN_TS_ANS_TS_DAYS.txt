CREATE OR REPLACE PROCEDURE TEST_YMH.CYBER_SEC_TESTING.MISSING_IDS_BETWEEN_TS_ANS_TS_DAYS()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    result_msg STRING;
BEGIN
    -- Table 1: IDS UNMATCHED IN TIMESHEETS and DAYS 
    CREATE OR REPLACE TABLE GB_Missing_TS_IDS_in_TSheetDAYS as 

    (WITH missing_values AS (
        SELECT ID as missing_value,
               ''TS_IDs in TIMESHEET not in TS_DAYS'' as source
        FROM TIMESHEET_TIMESHEET
        WHERE NOT EXISTS (SELECT 1 FROM TIMESHEET_TIMESHEETDAYS WHERE TIMESHEET_TIMESHEETDAYS.TIMESHEET_ID = TIMESHEET_TIMESHEET.ID)
        
        UNION ALL
        
        SELECT TIMESHEET_ID,
               ''TS_IDs in DAYS not in TIMESHEET'' as source
        FROM TIMESHEET_TIMESHEETDAYS
        WHERE NOT EXISTS (SELECT 1 FROM TIMESHEET_TIMESHEET WHERE TIMESHEET_TIMESHEET.ID = TIMESHEET_TIMESHEETDAYS.TIMESHEET_ID)
    ),
    Missing_Table AS (
        SELECT 
            ROW_NUMBER() OVER (ORDER BY missing_value) as row_num,
            missing_value, 
            source 
        FROM missing_values
    )
    -- Part 2: Pivoted view
    SELECT *
    FROM Missing_Table
    PIVOT(
        MAX(missing_value)
        FOR source IN (''TS_IDs in TIMESHEET not in TS_DAYS'', ''TS_IDs in DAYS not in TIMESHEET'')
    ) AS p
    ORDER BY row_num);

  


        
    -- Rest of the previous procedure remains the same...
    -- Table 2: UNmatched Tables above But PIVOTED
    
    CREATE OR REPLACE TABLE GB_Missing_TS_IDS_BETWEEN_SHEETSandDAYS_ROWFORM as 

    WITH missing_values AS (
        SELECT ID as missing_value,
               ''TS_IDs in TIMESHEET not in TS_DAYS'' as source
        FROM TIMESHEET_TIMESHEET
        WHERE NOT EXISTS (SELECT 1 FROM TIMESHEET_TIMESHEETDAYS WHERE TIMESHEET_TIMESHEETDAYS.TIMESHEET_ID = TIMESHEET_TIMESHEET.ID)
        
        UNION ALL
        
        SELECT TIMESHEET_ID,
               ''TS_IDs in DAYS not in TIMESHEET'' as source
        FROM TIMESHEET_TIMESHEETDAYS
        WHERE NOT EXISTS (SELECT 1 FROM TIMESHEET_TIMESHEET WHERE TIMESHEET_TIMESHEET.ID = TIMESHEET_TIMESHEETDAYS.TIMESHEET_ID)
    ),
    Missing_Table AS (
        SELECT 
            ROW_NUMBER() OVER (ORDER BY missing_value) as row_num,
            missing_value, 
            source 
        FROM missing_values
    )
    select * from Missing_Table
    ;


    -- Table 3: Summary of Matching and Non-Matching Vehicles
    
   

   -- Part 3: Counts
    CREATE OR REPLACE TABLE GB_COUNTS_MISSING_TIMESHEETS AS 
    
    SELECT source, COUNT(*) as count
    FROM GB_Missing_TS_IDS_BETWEEN_SHEETSandDAYS_ROWFORM 
    GROUP BY source;

  
    result_msg := ''Successfully created vehicle matching tables'';
    RETURN result_msg;
END;
';